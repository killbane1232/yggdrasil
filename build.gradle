plugins {
	id 'org.jetbrains.kotlin.jvm' version '1.9.24'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.24'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
//	id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.24'
	id 'org.jetbrains.kotlin.plugin.serialization' version '1.6.21'
}
group = 'ru.arcam'
version = '0.0.1-SNAPSHOT'

var telegramBotVersion = "6.9.7.1"

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation("org.springframework.boot:spring-boot-starter")
	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation('org.jetbrains.kotlinx:kotlinx-serialization-json')
	implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.18.+"
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'jakarta.xml.bind:jakarta.xml.bind-api:3.0.1'
	implementation 'com.fasterxml.jackson.module:jackson-module-jakarta-xmlbind-annotations:2.13.3'
	implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'

	implementation("org.telegram:telegrambots:$telegramBotVersion")
	implementation("org.telegram:telegrambotsextensions:$telegramBotVersion")
	implementation("org.telegram:telegrambots-spring-boot-starter:$telegramBotVersion")
	implementation("org.telegram:telegrambots-abilities:$telegramBotVersion")

	compileOnly 'org.projectlombok:lombok'
//	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

kotlin {
	compilerOptions {
		freeCompilerArgs.addAll '-Xjsr305=strict'
	}
}

allOpen {
	annotation("javax.persistence.Entity")
	annotation("javax.persistence.MappedSuperclass")
	annotation("javax.persistence.Embeddable")
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('fatJar', Jar) {
	manifest.from jar.manifest
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
	from {
		configurations.runtimeClasspath.collect {
			it.isDirectory() ? it : zipTree(it)
		}
	}
	with jar
}

jar {
	manifest {
		attributes(
				'Main-Class': 'ru.arcam.yggdrasil.YggdrasilApplication'
		)
	}
}
